{"ast":null,"code":"var _jsxFileName = \"/Users/farhad/Projects/CurrencyConverter/src/components/modal.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from \"react-bootstrap/Modal\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction converter(props) {\n  switch (props.target) {\n    case \"USD\":\n      return props.sourceVal * 0.013;\n\n    case \"EURO\":\n      return props.sourceVal * 0.012;\n\n    case \"SGD\":\n      return props.sourceVal * 0.018;\n\n    case \"AUD\":\n      return props.sourceVal * 0.019;\n\n    case \"GBP\":\n      return props.sourceVal * 0.0098;\n  }\n}\n\nfunction ResModal(props) {\n  const result = converter(props);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.isOpen,\n    onHide: props.hideModal,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: [\"You are converting \", props.source, \" to \", props.target]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [props.sourceVal, \" Rupee is equal to \", result, \" \", props.target]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: props.hideModal,\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ResModal;\nexport default ResModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResModal\");","map":{"version":3,"sources":["/Users/farhad/Projects/CurrencyConverter/src/components/modal.js"],"names":["Modal","React","useState","converter","props","target","sourceVal","ResModal","result","isOpen","hideModal","source"],"mappings":";AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,UAAQA,KAAK,CAACC,MAAd;AACI,SAAK,KAAL;AACI,aAAOD,KAAK,CAACE,SAAN,GAAgB,KAAvB;;AACJ,SAAK,MAAL;AACI,aAAOF,KAAK,CAACE,SAAN,GAAgB,KAAvB;;AACJ,SAAK,KAAL;AACI,aAAOF,KAAK,CAACE,SAAN,GAAgB,KAAvB;;AACJ,SAAK,KAAL;AACI,aAAOF,KAAK,CAACE,SAAN,GAAgB,KAAvB;;AACJ,SAAK,KAAL;AACI,aAAOF,KAAK,CAACE,SAAN,GAAgB,MAAvB;AAVR;AAYH;;AACD,SAASC,QAAT,CAAkBH,KAAlB,EAAyB;AACrB,QAAMI,MAAM,GAAGL,SAAS,CAACC,KAAD,CAAxB;AACA,sBACI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,KAAK,CAACK,MAAnB;AAA2B,IAAA,MAAM,EAAEL,KAAK,CAACM,SAAzC;AAAA,4BACI,QAAC,KAAD,CAAO,MAAP;AAAA,wCAAkCN,KAAK,CAACO,MAAxC,UAAoDP,KAAK,CAACC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD,CAAO,IAAP;AAAA,iBAAaD,KAAK,CAACE,SAAnB,yBAAiDE,MAAjD,OAA0DJ,KAAK,CAACC,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD,CAAO,MAAP;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAED,KAAK,CAACM,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;KAXQH,Q;AAaT,eAAeA,QAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from \"react-bootstrap/Modal\";\nimport React, { useState } from 'react';\n\nfunction converter(props) {\n    switch (props.target) {\n        case \"USD\":\n            return props.sourceVal*0.013\n        case \"EURO\":\n            return props.sourceVal*0.012\n        case \"SGD\":\n            return props.sourceVal*0.018\n        case \"AUD\":\n            return props.sourceVal*0.019\n        case \"GBP\":\n            return props.sourceVal*0.0098\n    }\n}\nfunction ResModal(props) {\n    const result = converter(props)\n    return (\n        <Modal show={props.isOpen} onHide={props.hideModal}>\n            <Modal.Header>You are converting {props.source} to {props.target}</Modal.Header>\n            <Modal.Body>{props.sourceVal} Rupee is equal to {result} {props.target}</Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-primary\" onClick={props.hideModal}>Ok</button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default ResModal\n\n"]},"metadata":{},"sourceType":"module"}