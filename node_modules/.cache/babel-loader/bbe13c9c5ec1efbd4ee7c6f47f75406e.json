{"ast":null,"code":"var _jsxFileName = \"/Users/farhad/Projects/CurrencyConverter/src/components/modal.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from \"react-bootstrap/Modal\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction converter(props) {\n  switch (props.source) {\n    case \"USD\":\n      alert(\"USD\");\n  }\n}\n\nfunction ResModal(props) {\n  converter(props);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.isOpen,\n    onHide: props.hideModal,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: [\"You are converting \", props.source, \" to \", props.target]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: props.sourceVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: props.hideModal,\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ResModal;\nexport default ResModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResModal\");","map":{"version":3,"sources":["/Users/farhad/Projects/CurrencyConverter/src/components/modal.js"],"names":["Modal","React","useState","converter","props","source","alert","ResModal","isOpen","hideModal","target","sourceVal"],"mappings":";AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACrB,UAAOA,KAAK,CAACC,MAAb;AACI,SAAK,KAAL;AACIC,MAAAA,KAAK,CAAC,KAAD,CAAL;AAFR;AAIH;;AACD,SAASC,QAAT,CAAkBH,KAAlB,EAAwB;AACxBD,EAAAA,SAAS,CAACC,KAAD,CAAT;AACA,sBACI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,KAAK,CAACI,MAAnB;AAA2B,IAAA,MAAM,EAAEJ,KAAK,CAACK,SAAzC;AAAA,4BACE,QAAC,KAAD,CAAO,MAAP;AAAA,wCAAkCL,KAAK,CAACC,MAAxC,UAAoDD,KAAK,CAACM,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD,CAAO,IAAP;AAAA,gBAAaN,KAAK,CAACO;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD,CAAO,MAAP;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAEP,KAAK,CAACK,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASC;;KAXQF,Q;AAaT,eAAeA,QAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from \"react-bootstrap/Modal\";\nimport React, { useState } from 'react';\n\n\nfunction converter(props){\n    switch(props.source){\n        case \"USD\":\n            alert(\"USD\")\n    }\n}\nfunction ResModal(props){\nconverter(props)\nreturn (\n    <Modal show={props.isOpen} onHide={props.hideModal}>\n      <Modal.Header>You are converting {props.source} to {props.target}</Modal.Header>\n      <Modal.Body>{props.sourceVal}</Modal.Body>\n      <Modal.Footer>\n          <button className=\"btn btn-primary\" onClick={props.hideModal}>Ok</button>\n        </Modal.Footer>\n      </Modal>\n)\n}\n\nexport default ResModal\n\n"]},"metadata":{},"sourceType":"module"}